name: Monitorear Deploy en Vercel y Notificar a Discord

on:
  push:
    branches:
      - main # O la rama que activa el deploy en Vercel

jobs:
  check-vercel-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Esperar 30 segundos (para dar tiempo a Vercel de iniciar el deploy)
        run: sleep 30

      - name: Verificar estado del Deploy en Vercel
        id: vercel_status
        run: |
          # Hacemos un ciclo de polling para verificar el estado del deploy
          for i in {1..10}; do
            STATUS=$(curl -s -H "Authorization: Bearer ${{ secrets.VERCEL_TOKEN }}" \
                          "https://api.vercel.com/v6/deployments?projectId=${{ secrets.VERCEL_PROJECT_ID }}" \
                          | jq -r '.deployments[0].state')
            echo "Estado actual del deploy: $STATUS"
            if [[ "$STATUS" == "READY" || "$STATUS" == "ERROR" ]]; then
              break
            fi
            echo "Esperando 30 segundos más para verificar el estado..."
            sleep 30
          done
          echo "deploy_status=$STATUS" >> $GITHUB_ENV

      - name: Notificar ÉXITO en Discord ✅
        if: env.deploy_status == 'READY'
        run: |
          curl -H "Content-Type: application/json" \
               -X POST \
               -d "{\"content\": \"✅ [WEB] ${{ github.event.head_commit.message }} 🎉\"}" \
               ${{ secrets.DISCORD_WEBHOOK }}

      - name: Notificar ERROR en Discord ❌
        if: env.deploy_status == 'ERROR'
        run: |
          curl -H "Content-Type: application/json" \
               -X POST \
               -d "{\"content\": \"❌ [WEB] ${{ github.event.head_commit.message }} 🚨\"}" \
               ${{ secrets.DISCORD_WEBHOOK }}
